$(document).ready(function(){initGoogleMaps()}),window.initGoogleMaps=function(){$(".google-map-canvas").each(function(){var t=$(this).data("map-id"),e=JSON.parse($(this).data("markers").replace(new RegExp("'","g"),'"').replace(new RegExp("\n","g"),"")),a=new Array,o=new google.maps.Map($(this).get(0),{center:{lat:0,lng:0},zoom:10,mapTypeId:google.maps.MapTypeId[$(this).data("type")],draggable:$(this).data("draggable"),scrollwheel:$(this).data("scrollwheel"),mapTypeControl:$(this).data("map-type-control"),zoomControl:$(this).data("zoom-control"),streetViewControl:$(this).data("street-view-control")});o.setTilt($(this).data("tilt"));var r=new google.maps.InfoWindow({maxWidth:250});$.each(e.markers,function(s,n){for(var g in e.markers[s])geocoder=new google.maps.Geocoder,geocoder.geocode({address:e.markers[s][g][0].street+", "+e.markers[s][g][0].zip+", "+e.markers[s][g][0].city+", "+e.markers[s][g][0].country},function(n,i){if(i==google.maps.GeocoderStatus.OK){var l=new google.maps.Marker({map:o,position:n[0].geometry.location});a.push(l),""==e.markers[s][g][0].title&&""==e.markers[s][g][0].text||google.maps.event.addListener(l,"click",function(){var t;""!=e.markers[s][g][0].title&&(t="<h6>"+e.markers[s][g][0].title+"</h6>"),""!=e.markers[s][g][0].text&&(t+="<p>"+e.markers[s][g][0].text+"</p>"),r.setContent(t),r.open(o,this)})}if(1==$(".google-map-canvas[data-map-id="+t+"]").data("fit-bounds")){for(var d=new google.maps.LatLngBounds,m=0;m<a.length;m++)d.extend(a[m].getPosition());if(d.getNorthEast().equals(d.getSouthWest())){var p=new google.maps.LatLng(d.getNorthEast().lat()+.01,d.getNorthEast().lng()+.01),h=new google.maps.LatLng(d.getNorthEast().lat()-.01,d.getNorthEast().lng()-.01);d.extend(p),d.extend(h)}o.fitBounds(d)}})}),0==$(this).data("fit-bounds")&&(o.setCenter({lat:$(this).data("lat"),lng:$(this).data("lng")}),o.setZoom($(this).data("zoom")))})};
//# sourceMappingURL=data:application/json;base64,
